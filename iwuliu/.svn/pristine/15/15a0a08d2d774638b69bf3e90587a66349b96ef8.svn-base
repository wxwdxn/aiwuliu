/**
 * 版权所有：版权所有(C) 2015
 * 文件名称: VehicleServiceImpl.Java
 * 系统编号：Z0001002
 * 系统名称：物流管理平台
 * 模块编号：02
 * 模块名称：车辆管理查询接口实现
 * 设计文件：
 * 完成日期：2016-11-10
 * 作    者：QJ
 * 内容摘要：车辆管理查询
 */

package com.cn.gazelle.logistics.service.impl;


import com.cn.gazelle.logistics.dao.VehicleDaoMapper;
import com.cn.gazelle.logistics.pojo.T_Data_Vehicle;
import com.cn.gazelle.logistics.service.VehicleService;
import com.cn.gazelle.logistics.util.message.TruckManager_Message;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;
import javax.jws.WebService;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 类 名 称: VehicleServiceImpl
 * 内容摘要: 车辆管理查询接口
 * 方法描述：该类有2个方法：
 * 01 findVehicleListCompany   根据条件查找车辆列表(物流公司)
 * 02 findVehicleListDriver   根据条件查找车辆列表(司机)
 *
 * @author QJ
 */
@Service
@WebService(endpointInterface = "com.cn.gazelle.logistics.service.VehicleService", targetNamespace = "http://service.logistics.gazelle.cn.com/")
public class VehicleServiceImpl implements VehicleService {
    public static String code;                                 // 全局变量
    // Log初始化
    Logger logger = Logger.getLogger(VehicleServiceImpl.class);

    @Resource
    private VehicleDaoMapper vehicleDaoMapper;            // 数据访问层

    /**
     * 方法名称：findVehicleListCompany
     * 内容摘要：根据条件查找车辆列表(物流公司)
     *
     * @return findVehicleListCompany 车辆列表（物流公司）
     */
    public List<T_Data_Vehicle> findVehicleListCompany(HashMap<String,String> conditions) {
        List<T_Data_Vehicle> findVehicleListCompany = null;
        try {
            findVehicleListCompany = this.vehicleDaoMapper.findVehicleListCompany(conditions);
            logger.info(TruckManager_Message.seacheInfo);
        } catch (Exception e) {
            logger.error(TruckManager_Message.seacheInfoError + e.getMessage());
        }
        return findVehicleListCompany;
    }

    /**
     * 方法名称：findVehicleListDriver
     * 内容摘要：根据条件查找车辆列表(司机)
     *
     * @return findVehicleListDriver 车辆列表（司机）
     */
    public List<T_Data_Vehicle> findVehicleListDriver(HashMap<String,String> conditions) {
        List<T_Data_Vehicle> findVehicleListDriver = null;
        try {
            findVehicleListDriver = this.vehicleDaoMapper.findVehicleListDriver(conditions);
            logger.info(TruckManager_Message.seacheInfo);
        } catch (Exception e) {
            logger.error(TruckManager_Message.seacheInfoError + e.getMessage());
        }
        return findVehicleListDriver;
    }
}